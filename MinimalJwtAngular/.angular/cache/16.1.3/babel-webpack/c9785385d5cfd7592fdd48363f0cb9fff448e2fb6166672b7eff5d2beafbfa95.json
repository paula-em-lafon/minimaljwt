{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"../../services/storage.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \" Show something \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class LoginComponent {\n  constructor(authService, storageService) {\n    this.authService = authService;\n    this.storageService = storageService;\n    this.form = {\n      username: null,\n      password: null\n    };\n    this.isLoggedIn = false;\n    this.isLoginFailed = false;\n    this.errorMessage = '';\n    this.roles = [];\n  }\n  ngOnInit() {\n    if (this.storageService.isLoggedIn()) {\n      this.isLoggedIn = true;\n      this.roles = this.storageService.getUser().roles;\n    }\n  }\n  onSubmit() {\n    const {\n      username,\n      password\n    } = this.form;\n    this.authService.login(username, password).subscribe({\n      next: data => {\n        this.storageService.saveUser(data);\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.storageService.getUser().roles;\n        this.reloadPage();\n      },\n      error: err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    });\n  }\n  reloadPage() {\n    window.location.reload();\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.StorageService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 22,\n  vars: 9,\n  consts: [[1, \"nav\", \"navbar-nav\", \"flex-row\", \"justify-content-between\", \"ml-auto\"], [4, \"ngIf\"], [1, \"nav-item\", \"order-2\", \"order-md-1\"], [\"href\", \"#\", \"title\", \"settings\", 1, \"nav-link\"], [1, \"fa\", \"fa-cog\", \"fa-fw\", \"fa-lg\"], [1, \"dropdown\", \"order-1\"], [\"type\", \"button\", \"id\", \"dropdownMenu1\", \"data-toggle\", \"dropdown\", 1, \"btn\", \"btn-outline-secondary\", \"dropdown-toggle\"], [1, \"caret\"], [1, \"dropdown-menu\", \"dropdown-menu-right\", \"mt-1\"], [1, \"p-3\"], [\"role\", \"form\", 1, \"form\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"form-group\"], [\"id\", \"username\", \"name\", \"username\", \"placeholder\", \"Username\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\", \"form-control-sm\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"username\", \"ngModel\"], [\"id\", \"password\", \"placeholder\", \"Password\", \"name\", \"password\", \"type\", \"password\", \"required\", \"\", 1, \"form-control\", \"form-control-sm\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"password\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"ul\", 0);\n      i0.ɵɵtemplate(1, LoginComponent_li_1_Template, 2, 0, \"li\", 1);\n      i0.ɵɵelementStart(2, \"li\", 2)(3, \"a\", 3);\n      i0.ɵɵelement(4, \"i\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"li\", 5)(6, \"button\", 6);\n      i0.ɵɵtext(7, \"Login \");\n      i0.ɵɵelement(8, \"span\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"ul\", 8)(10, \"li\", 9)(11, \"form\", 10, 11);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_11_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r1 = i0.ɵɵreference(12);\n        return i0.ɵɵresetView(_r1.form.valid && ctx.onSubmit());\n      });\n      i0.ɵɵelementStart(13, \"div\", 12)(14, \"input\", 13, 14);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.form.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 12)(17, \"input\", 15, 16);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.form.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 12)(20, \"button\", 17);\n      i0.ɵɵtext(21, \"Login\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(12);\n      const _r2 = i0.ɵɵreference(15);\n      const _r3 = i0.ɵɵreference(18);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.form.username)(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, _r1.submitted && _r2.errors));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.form.password)(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, _r1.submitted && _r3.errors));\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","authService","storageService","form","username","password","isLoggedIn","isLoginFailed","errorMessage","roles","ngOnInit","getUser","onSubmit","login","subscribe","next","data","saveUser","reloadPage","error","err","message","window","location","reload","ɵɵdirectiveInject","i1","AuthService","i2","StorageService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵtemplate","LoginComponent_li_1_Template","ɵɵelement","ɵɵlistener","LoginComponent_Template_form_ngSubmit_11_listener","ɵɵrestoreView","_r4","_r1","ɵɵreference","ɵɵresetView","valid","LoginComponent_Template_input_ngModelChange_14_listener","$event","LoginComponent_Template_input_ngModelChange_17_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","submitted","_r2","errors","_r3"],"sources":["C:\\Users\\paula.lafon\\projects\\learning\\learndotnet\\webapp\\examples\\MinimalJwtAngular\\src\\app\\components\\login\\login.component.ts","C:\\Users\\paula.lafon\\projects\\learning\\learndotnet\\webapp\\examples\\MinimalJwtAngular\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { StorageService } from '../../services/storage.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {\n    username: null,\n    password: null\n  }\n\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n  constructor(private authService: AuthService, private storageService: StorageService) { }\n\n  ngOnInit(): void {\n    if (this.storageService.isLoggedIn()) {\n      this.isLoggedIn = true;\n      this.roles = this.storageService.getUser().roles;\n    }\n  }\n\n  onSubmit(): void {\n    const { username, password } = this.form;\n\n    this.authService.login(username, password).subscribe({\n      next: data => {\n        this.storageService.saveUser(data);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.storageService.getUser().roles;\n        this.reloadPage();\n      },\n      error: err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    });\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n\n}\n","\r\n\r\n<ul class=\"nav navbar-nav flex-row justify-content-between ml-auto\">\r\n  <li *ngIf=\"isLoggedIn\">\r\n    Show something\r\n  </li>\r\n\r\n  <li class=\"nav-item order-2 order-md-1\"><a href=\"#\" class=\"nav-link\" title=\"settings\"><i class=\"fa fa-cog fa-fw fa-lg\"></i></a></li>\r\n  <li class=\"dropdown order-1\">\r\n    <button type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" class=\"btn btn-outline-secondary dropdown-toggle\">Login <span class=\"caret\"></span></button>\r\n    <ul class=\"dropdown-menu dropdown-menu-right mt-1\">\r\n      <li class=\"p-3\">\r\n        <form class=\"form\" role=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\">\r\n          <div class=\"form-group\">\r\n            <input id=\"username\" name=\"username\" placeholder=\"Username\" class=\"form-control form-control-sm\" type=\"text\" [(ngModel)]=\"form.username\" required #username=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && username.errors }\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input id=\"password\" placeholder=\"Password\" class=\"form-control form-control-sm\" name=\"password\" type=\"password\" required [(ngModel)]=\"form.password\" #password=\"ngModel\" [ngClass]=\"{ 'is-invalid': f.submitted && password.errors }\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <button type=\"submit\" class=\"btn btn-primary btn-block\">Login</button>\r\n          </div>\r\n        </form>\r\n      </li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n"],"mappings":";;;;;;;ICGEA,EAAA,CAAAC,cAAA,SAAuB;IACrBD,EAAA,CAAAE,MAAA,uBACF;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;;;;;ADKP,OAAM,MAAOC,cAAc;EAWzBC,YAAoBC,WAAwB,EAAUC,cAA8B;IAAhE,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,cAAc,GAAdA,cAAc;IAVpE,KAAAC,IAAI,GAAQ;MACVC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE;KACX;IAED,KAAAC,UAAU,GAAG,KAAK;IAClB,KAAAC,aAAa,GAAG,KAAK;IACrB,KAAAC,YAAY,GAAG,EAAE;IACjB,KAAAC,KAAK,GAAa,EAAE;EAEoE;EAExFC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACR,cAAc,CAACI,UAAU,EAAE,EAAE;MACpC,IAAI,CAACA,UAAU,GAAG,IAAI;MACtB,IAAI,CAACG,KAAK,GAAG,IAAI,CAACP,cAAc,CAACS,OAAO,EAAE,CAACF,KAAK;;EAEpD;EAEAG,QAAQA,CAAA;IACN,MAAM;MAAER,QAAQ;MAAEC;IAAQ,CAAE,GAAG,IAAI,CAACF,IAAI;IAExC,IAAI,CAACF,WAAW,CAACY,KAAK,CAACT,QAAQ,EAAEC,QAAQ,CAAC,CAACS,SAAS,CAAC;MACnDC,IAAI,EAAEC,IAAI,IAAG;QACX,IAAI,CAACd,cAAc,CAACe,QAAQ,CAACD,IAAI,CAAC;QAElC,IAAI,CAACT,aAAa,GAAG,KAAK;QAC1B,IAAI,CAACD,UAAU,GAAG,IAAI;QACtB,IAAI,CAACG,KAAK,GAAG,IAAI,CAACP,cAAc,CAACS,OAAO,EAAE,CAACF,KAAK;QAChD,IAAI,CAACS,UAAU,EAAE;MACnB,CAAC;MACDC,KAAK,EAAEC,GAAG,IAAG;QACX,IAAI,CAACZ,YAAY,GAAGY,GAAG,CAACD,KAAK,CAACE,OAAO;QACrC,IAAI,CAACd,aAAa,GAAG,IAAI;MAC3B;KACD,CAAC;EACJ;EAEAW,UAAUA,CAAA;IACRI,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B;;AAzCWzB,cAAc,C;mBAAdA,cAAc,EAAAJ,EAAA,CAAA8B,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAhC,EAAA,CAAA8B,iBAAA,CAAAG,EAAA,CAAAC,cAAA;AAAA;AAAd9B,cAAc,C;QAAdA,cAAc;EAAA+B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MCR3BzC,EAAA,CAAAC,cAAA,YAAoE;MAClED,EAAA,CAAA2C,UAAA,IAAAC,4BAAA,gBAEK;MAEL5C,EAAA,CAAAC,cAAA,YAAwC;MAA8CD,EAAA,CAAA6C,SAAA,WAAqC;MAAA7C,EAAA,CAAAG,YAAA,EAAI;MAC/HH,EAAA,CAAAC,cAAA,YAA6B;MACuFD,EAAA,CAAAE,MAAA,aAAM;MAAAF,EAAA,CAAA6C,SAAA,cAA2B;MAAA7C,EAAA,CAAAG,YAAA,EAAS;MAC5JH,EAAA,CAAAC,cAAA,YAAmD;MAEhBD,EAAA,CAAA8C,UAAA,sBAAAC,kDAAA;QAAA/C,EAAA,CAAAgD,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAAlD,EAAA,CAAAmD,WAAA;QAAA,OAAYnD,EAAA,CAAAoD,WAAA,CAAAF,GAAA,CAAA1C,IAAA,CAAA6C,KAAA,IAAgBX,GAAA,CAAAzB,QAAA,EAAU;MAAA,EAAC;MACpEjB,EAAA,CAAAC,cAAA,eAAwB;MACuFD,EAAA,CAAA8C,UAAA,2BAAAQ,wDAAAC,MAAA;QAAA,OAAAb,GAAA,CAAAlC,IAAA,CAAAC,QAAA,GAAA8C,MAAA;MAAA,EAA2B;MAAxIvD,EAAA,CAAAG,YAAA,EAAmO;MAErOH,EAAA,CAAAC,cAAA,eAAwB;MACoGD,EAAA,CAAA8C,UAAA,2BAAAU,wDAAAD,MAAA;QAAA,OAAAb,GAAA,CAAAlC,IAAA,CAAAE,QAAA,GAAA6C,MAAA;MAAA,EAA2B;MAArJvD,EAAA,CAAAG,YAAA,EAAuO;MAEzOH,EAAA,CAAAC,cAAA,eAAwB;MACkCD,EAAA,CAAAE,MAAA,aAAK;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;;;;MAjB3EH,EAAA,CAAAyD,SAAA,GAAgB;MAAhBzD,EAAA,CAAA0D,UAAA,SAAAhB,GAAA,CAAA/B,UAAA,CAAgB;MAWkGX,EAAA,CAAAyD,SAAA,IAA2B;MAA3BzD,EAAA,CAAA0D,UAAA,YAAAhB,GAAA,CAAAlC,IAAA,CAAAC,QAAA,CAA2B,YAAAT,EAAA,CAAA2D,eAAA,IAAAC,GAAA,EAAAV,GAAA,CAAAW,SAAA,IAAAC,GAAA,CAAAC,MAAA;MAGd/D,EAAA,CAAAyD,SAAA,GAA2B;MAA3BzD,EAAA,CAAA0D,UAAA,YAAAhB,GAAA,CAAAlC,IAAA,CAAAE,QAAA,CAA2B,YAAAV,EAAA,CAAA2D,eAAA,IAAAC,GAAA,EAAAV,GAAA,CAAAW,SAAA,IAAAG,GAAA,CAAAD,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}