{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-cookie-service\";\nconst USER_KEY = 'auth-user';\nexport class StorageService {\n  constructor(cookieService) {\n    this.cookieService = cookieService;\n  }\n  clean() {\n    window.sessionStorage.clear();\n    this.cookieService.delete('Authorization');\n  }\n  saveUser(user) {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n  getUser() {\n    const user = window.sessionStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n    return {};\n  }\n  isLoggedIn() {\n    const user = window.sessionStorage.getItem(USER_KEY);\n    if (user) {\n      return true;\n    }\n    return false;\n  }\n}\nStorageService.ɵfac = function StorageService_Factory(t) {\n  return new (t || StorageService)(i0.ɵɵinject(i1.CookieService));\n};\nStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StorageService,\n  factory: StorageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["USER_KEY","StorageService","constructor","cookieService","clean","window","sessionStorage","clear","delete","saveUser","user","removeItem","setItem","JSON","stringify","getUser","getItem","parse","isLoggedIn","i0","ɵɵinject","i1","CookieService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\paula.lafon\\projects\\learning\\learndotnet\\webapp\\examples\\MinimalJwtAngular\\src\\app\\services\\storage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  constructor(private cookieService: CookieService) { }\n\n  clean(): void {\n    window.sessionStorage.clear();\n    this.cookieService.delete('Authorization');\n  }\n\n  public saveUser(user: any): void {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    const user = window.sessionStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n\n    return {};\n  }\n\n  public isLoggedIn(): boolean {\n    const user = window.sessionStorage.getItem(USER_KEY);\n    if (user) {\n      return true;\n    }\n\n    return false;\n  }\n\n}\n"],"mappings":";;AAGA,MAAMA,QAAQ,GAAG,WAAW;AAK5B,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;EAAmB;EAEpDC,KAAKA,CAAA;IACHC,MAAM,CAACC,cAAc,CAACC,KAAK,EAAE;IAC7B,IAAI,CAACJ,aAAa,CAACK,MAAM,CAAC,eAAe,CAAC;EAC5C;EAEOC,QAAQA,CAACC,IAAS;IACvBL,MAAM,CAACC,cAAc,CAACK,UAAU,CAACX,QAAQ,CAAC;IAC1CK,MAAM,CAACC,cAAc,CAACM,OAAO,CAACZ,QAAQ,EAAEa,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;EAC/D;EAEOK,OAAOA,CAAA;IACZ,MAAML,IAAI,GAAGL,MAAM,CAACC,cAAc,CAACU,OAAO,CAAChB,QAAQ,CAAC;IACpD,IAAIU,IAAI,EAAE;MACR,OAAOG,IAAI,CAACI,KAAK,CAACP,IAAI,CAAC;;IAGzB,OAAO,EAAE;EACX;EAEOQ,UAAUA,CAAA;IACf,MAAMR,IAAI,GAAGL,MAAM,CAACC,cAAc,CAACU,OAAO,CAAChB,QAAQ,CAAC;IACpD,IAAIU,IAAI,EAAE;MACR,OAAO,IAAI;;IAGb,OAAO,KAAK;EACd;;AA9BWT,cAAc,C;mBAAdA,cAAc,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA;AAAA;AAAdrB,cAAc,C;SAAdA,cAAc;EAAAsB,OAAA,EAAdtB,cAAc,CAAAuB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}