{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-cookie-service\";\nimport * as i2 from \"@auth0/angular-jwt\";\nconst USER_KEY = 'currentuser';\nconst ROLE = 'role';\nconst REFRESH_TOKEN = 'refreshToken';\nexport class StorageService {\n  constructor(cookieService, jwtHelper) {\n    this.cookieService = cookieService;\n    this.jwtHelper = jwtHelper;\n    this.isLoggedIn = new BehaviorSubject(this.isLoggedInfunc()); // initial value is \"userdoc is not ready\"\n  }\n\n  clean() {\n    window.sessionStorage.clear();\n    this.cookieService.delete('Authorization');\n  }\n  saveUser(user) {\n    this.cookieService.delete('Authorization');\n    this.cookieService.set('Authorization', user.token);\n    delete user.token;\n    window.localStorage.removeItem(REFRESH_TOKEN);\n    window.localStorage.setItem(REFRESH_TOKEN, user.refreshToken);\n    delete user.refreshToken;\n    window.localStorage.setItem(USER_KEY, JSON.stringify(user));\n    this.setValueLoggedIn(true);\n  }\n  getUser() {\n    const user = window.sessionStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n    return {};\n  }\n  isLoggedInfunc() {\n    const token = this.cookieService.get('Authorization');\n    if (token) {\n      return !this.jwtHelper.isTokenExpired(token);\n      ;\n    }\n    return false;\n  }\n  getRefreshToken() {\n    const user = window.localStorage.getItem(REFRESH_TOKEN);\n    if (user) {\n      return user;\n    }\n    return null;\n  }\n  getToken() {\n    const token = this.cookieService.get('Authorization');\n    if (token) {\n      return token;\n    }\n    return null;\n  }\n  setValueLoggedIn(value) {\n    this.valueSubject.next(value);\n  }\n  getValueLoggedIn() {\n    return this.valueSubject.asObservable();\n  }\n}\nStorageService.ɵfac = function StorageService_Factory(t) {\n  return new (t || StorageService)(i0.ɵɵinject(i1.CookieService), i0.ɵɵinject(i2.JwtHelperService));\n};\nStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StorageService,\n  factory: StorageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","USER_KEY","ROLE","REFRESH_TOKEN","StorageService","constructor","cookieService","jwtHelper","isLoggedIn","isLoggedInfunc","clean","window","sessionStorage","clear","delete","saveUser","user","set","token","localStorage","removeItem","setItem","refreshToken","JSON","stringify","setValueLoggedIn","getUser","getItem","parse","get","isTokenExpired","getRefreshToken","getToken","value","valueSubject","next","getValueLoggedIn","asObservable","i0","ɵɵinject","i1","CookieService","i2","JwtHelperService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\paula.lafon\\projects\\learning\\learndotnet\\webapp\\examples\\MinimalJwtAngular\\src\\app\\services\\storage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { of, Observable, BehaviorSubject } from 'rxjs';\r\n\r\nconst USER_KEY= 'currentuser';\r\nconst ROLE = 'role';\r\nconst REFRESH_TOKEN = 'refreshToken';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StorageService {\r\n\r\n  private isLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(this.isLoggedInfunc()); // initial value is \"userdoc is not ready\"\r\n  valueSubject: any;\r\n  constructor(private cookieService: CookieService, private jwtHelper: JwtHelperService) { }\r\n\r\n  clean(): void {\r\n    window.sessionStorage.clear();\r\n    this.cookieService.delete('Authorization');\r\n  }\r\n\r\n  public saveUser(user: any): void {\r\n    this.cookieService.delete('Authorization')\r\n    this.cookieService.set('Authorization', user.token);\r\n    delete user.token;\r\n    window.localStorage.removeItem(REFRESH_TOKEN);\r\n    window.localStorage.setItem(REFRESH_TOKEN, user.refreshToken);\r\n    delete user.refreshToken;\r\n    window.localStorage.setItem(USER_KEY, JSON.stringify(user));\r\n    this.setValueLoggedIn(true);\r\n  }\r\n\r\n\r\n\r\n  public getUser(): any {\r\n    const user = window.sessionStorage.getItem(USER_KEY);\r\n    if (user) {\r\n      return JSON.parse(user);\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  public isLoggedInfunc(): boolean {\r\n    const token = this.cookieService.get('Authorization');\r\n    if (token) {\r\n      return !this.jwtHelper.isTokenExpired(token);;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public getRefreshToken(): any {\r\n    const user = window.localStorage.getItem(REFRESH_TOKEN);\r\n    if (user) {\r\n      return user;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public getToken(): any {\r\n    const token = this.cookieService.get('Authorization')\r\n    if (token) {\r\n      return token;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  setValueLoggedIn(value: boolean) {\r\n    this.valueSubject.next(value);\r\n  }\r\n\r\n  getValueLoggedIn() {\r\n    return this.valueSubject.asObservable();\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAAyBA,eAAe,QAAQ,MAAM;;;;AAEtD,MAAMC,QAAQ,GAAE,aAAa;AAC7B,MAAMC,IAAI,GAAG,MAAM;AACnB,MAAMC,aAAa,GAAG,cAAc;AAMpC,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,aAA4B,EAAUC,SAA2B;IAAjE,KAAAD,aAAa,GAAbA,aAAa;IAAyB,KAAAC,SAAS,GAATA,SAAS;IAF3D,KAAAC,UAAU,GAA6B,IAAIR,eAAe,CAAU,IAAI,CAACS,cAAc,EAAE,CAAC,CAAC,CAAC;EAEX;;EAEzFC,KAAKA,CAAA;IACHC,MAAM,CAACC,cAAc,CAACC,KAAK,EAAE;IAC7B,IAAI,CAACP,aAAa,CAACQ,MAAM,CAAC,eAAe,CAAC;EAC5C;EAEOC,QAAQA,CAACC,IAAS;IACvB,IAAI,CAACV,aAAa,CAACQ,MAAM,CAAC,eAAe,CAAC;IAC1C,IAAI,CAACR,aAAa,CAACW,GAAG,CAAC,eAAe,EAAED,IAAI,CAACE,KAAK,CAAC;IACnD,OAAOF,IAAI,CAACE,KAAK;IACjBP,MAAM,CAACQ,YAAY,CAACC,UAAU,CAACjB,aAAa,CAAC;IAC7CQ,MAAM,CAACQ,YAAY,CAACE,OAAO,CAAClB,aAAa,EAAEa,IAAI,CAACM,YAAY,CAAC;IAC7D,OAAON,IAAI,CAACM,YAAY;IACxBX,MAAM,CAACQ,YAAY,CAACE,OAAO,CAACpB,QAAQ,EAAEsB,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC,CAAC;IAC3D,IAAI,CAACS,gBAAgB,CAAC,IAAI,CAAC;EAC7B;EAIOC,OAAOA,CAAA;IACZ,MAAMV,IAAI,GAAGL,MAAM,CAACC,cAAc,CAACe,OAAO,CAAC1B,QAAQ,CAAC;IACpD,IAAIe,IAAI,EAAE;MACR,OAAOO,IAAI,CAACK,KAAK,CAACZ,IAAI,CAAC;;IAGzB,OAAO,EAAE;EACX;EAEOP,cAAcA,CAAA;IACnB,MAAMS,KAAK,GAAG,IAAI,CAACZ,aAAa,CAACuB,GAAG,CAAC,eAAe,CAAC;IACrD,IAAIX,KAAK,EAAE;MACT,OAAO,CAAC,IAAI,CAACX,SAAS,CAACuB,cAAc,CAACZ,KAAK,CAAC;MAAC;;IAG/C,OAAO,KAAK;EACd;EAEOa,eAAeA,CAAA;IACpB,MAAMf,IAAI,GAAGL,MAAM,CAACQ,YAAY,CAACQ,OAAO,CAACxB,aAAa,CAAC;IACvD,IAAIa,IAAI,EAAE;MACR,OAAOA,IAAI;;IAGb,OAAO,IAAI;EACb;EAEOgB,QAAQA,CAAA;IACb,MAAMd,KAAK,GAAG,IAAI,CAACZ,aAAa,CAACuB,GAAG,CAAC,eAAe,CAAC;IACrD,IAAIX,KAAK,EAAE;MACT,OAAOA,KAAK;;IAEd,OAAO,IAAI;EACb;EAEAO,gBAAgBA,CAACQ,KAAc;IAC7B,IAAI,CAACC,YAAY,CAACC,IAAI,CAACF,KAAK,CAAC;EAC/B;EAEAG,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACF,YAAY,CAACG,YAAY,EAAE;EACzC;;AAjEWjC,cAAc,C;mBAAdA,cAAc,EAAAkC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,gBAAA;AAAA;AAAdvC,cAAc,C;SAAdA,cAAc;EAAAwC,OAAA,EAAdxC,cAAc,CAAAyC,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}