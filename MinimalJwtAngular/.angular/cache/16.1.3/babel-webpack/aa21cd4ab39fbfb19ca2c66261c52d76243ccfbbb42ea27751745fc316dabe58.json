{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"../../services/storage.service\";\nexport class LoginComponent {\n  constructor(authService, storageService) {\n    this.authService = authService;\n    this.storageService = storageService;\n    this.form = {\n      username: null,\n      password: null\n    };\n    this.isLoggedIn = false;\n    this.isLoginFailed = false;\n    this.errorMessage = '';\n    this.roles = [];\n  }\n  ngOnInit() {\n    if (this.storageService.isLoggedIn()) {\n      this.isLoggedIn = true;\n      this.roles = this.storageService.getUser().roles;\n    }\n  }\n  onSubmit() {\n    const {\n      username,\n      password\n    } = this.form;\n    this.authService.login(username, password).subscribe({\n      next: data => {\n        this.storageService.saveUser(data);\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.storageService.getUser().roles;\n        this.reloadPage();\n      },\n      error: err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    });\n  }\n  reloadPage() {\n    window.location.reload();\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.StorageService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 18,\n  vars: 0,\n  consts: [[1, \"nav\", \"navbar-nav\", \"flex-row\", \"justify-content-between\", \"ml-auto\"], [1, \"nav-item\", \"order-2\", \"order-md-1\"], [\"href\", \"#\", \"title\", \"settings\", 1, \"nav-link\"], [1, \"fa\", \"fa-cog\", \"fa-fw\", \"fa-lg\"], [1, \"dropdown\", \"order-1\"], [\"type\", \"button\", \"id\", \"dropdownMenu1\", \"data-toggle\", \"dropdown\", 1, \"btn\", \"btn-outline-secondary\", \"dropdown-toggle\"], [1, \"caret\"], [1, \"dropdown-menu\", \"dropdown-menu-right\", \"mt-1\"], [1, \"p-3\"], [\"role\", \"form\", 1, \"form\"], [1, \"form-group\"], [\"id\", \"emailInput\", \"placeholder\", \"Email\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\", \"form-control-sm\"], [\"id\", \"passwordInput\", \"placeholder\", \"Password\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\", \"form-control-sm\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ul\", 0)(1, \"li\", 1)(2, \"a\", 2);\n      i0.ɵɵelement(3, \"i\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"li\", 4)(5, \"button\", 5);\n      i0.ɵɵtext(6, \"Login \");\n      i0.ɵɵelement(7, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"ul\", 7)(9, \"li\", 8)(10, \"form\", 9)(11, \"div\", 10);\n      i0.ɵɵelement(12, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 10);\n      i0.ɵɵelement(14, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 10)(16, \"button\", 13);\n      i0.ɵɵtext(17, \"Login\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["LoginComponent","constructor","authService","storageService","form","username","password","isLoggedIn","isLoginFailed","errorMessage","roles","ngOnInit","getUser","onSubmit","login","subscribe","next","data","saveUser","reloadPage","error","err","message","window","location","reload","i0","ɵɵdirectiveInject","i1","AuthService","i2","StorageService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext"],"sources":["C:\\Users\\paula.lafon\\projects\\learning\\learndotnet\\webapp\\examples\\MinimalJwtAngular\\src\\app\\components\\login\\login.component.ts","C:\\Users\\paula.lafon\\projects\\learning\\learndotnet\\webapp\\examples\\MinimalJwtAngular\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { StorageService } from '../../services/storage.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {\n    username: null,\n    password: null\n  }\n\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n  constructor(private authService: AuthService, private storageService: StorageService) { }\n\n  ngOnInit(): void {\n    if (this.storageService.isLoggedIn()) {\n      this.isLoggedIn = true;\n      this.roles = this.storageService.getUser().roles;\n    }\n  }\n\n  onSubmit(): void {\n    const { username, password } = this.form;\n\n    this.authService.login(username, password).subscribe({\n      next: data => {\n        this.storageService.saveUser(data);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.storageService.getUser().roles;\n        this.reloadPage();\n      },\n      error: err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    });\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n\n}\n","<ul class=\"nav navbar-nav flex-row justify-content-between ml-auto\">\r\n  <li class=\"nav-item order-2 order-md-1\"><a href=\"#\" class=\"nav-link\" title=\"settings\"><i class=\"fa fa-cog fa-fw fa-lg\"></i></a></li>\r\n  <li class=\"dropdown order-1\">\r\n    <button type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" class=\"btn btn-outline-secondary dropdown-toggle\">Login <span class=\"caret\"></span></button>\r\n    <ul class=\"dropdown-menu dropdown-menu-right mt-1\">\r\n      <li class=\"p-3\">\r\n        <form class=\"form\" role=\"form\">\r\n          <div class=\"form-group\">\r\n            <input id=\"emailInput\" placeholder=\"Email\" class=\"form-control form-control-sm\" type=\"text\" required=\"\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input id=\"passwordInput\" placeholder=\"Password\" class=\"form-control form-control-sm\" type=\"text\" required=\"\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <button type=\"submit\" class=\"btn btn-primary btn-block\">Login</button>\r\n          </div>\r\n        </form>\r\n      </li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n"],"mappings":";;;AAUA,OAAM,MAAOA,cAAc;EAWzBC,YAAoBC,WAAwB,EAAUC,cAA8B;IAAhE,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,cAAc,GAAdA,cAAc;IAVpE,KAAAC,IAAI,GAAQ;MACVC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE;KACX;IAED,KAAAC,UAAU,GAAG,KAAK;IAClB,KAAAC,aAAa,GAAG,KAAK;IACrB,KAAAC,YAAY,GAAG,EAAE;IACjB,KAAAC,KAAK,GAAa,EAAE;EAEoE;EAExFC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACR,cAAc,CAACI,UAAU,EAAE,EAAE;MACpC,IAAI,CAACA,UAAU,GAAG,IAAI;MACtB,IAAI,CAACG,KAAK,GAAG,IAAI,CAACP,cAAc,CAACS,OAAO,EAAE,CAACF,KAAK;;EAEpD;EAEAG,QAAQA,CAAA;IACN,MAAM;MAAER,QAAQ;MAAEC;IAAQ,CAAE,GAAG,IAAI,CAACF,IAAI;IAExC,IAAI,CAACF,WAAW,CAACY,KAAK,CAACT,QAAQ,EAAEC,QAAQ,CAAC,CAACS,SAAS,CAAC;MACnDC,IAAI,EAAEC,IAAI,IAAG;QACX,IAAI,CAACd,cAAc,CAACe,QAAQ,CAACD,IAAI,CAAC;QAElC,IAAI,CAACT,aAAa,GAAG,KAAK;QAC1B,IAAI,CAACD,UAAU,GAAG,IAAI;QACtB,IAAI,CAACG,KAAK,GAAG,IAAI,CAACP,cAAc,CAACS,OAAO,EAAE,CAACF,KAAK;QAChD,IAAI,CAACS,UAAU,EAAE;MACnB,CAAC;MACDC,KAAK,EAAEC,GAAG,IAAG;QACX,IAAI,CAACZ,YAAY,GAAGY,GAAG,CAACD,KAAK,CAACE,OAAO;QACrC,IAAI,CAACd,aAAa,GAAG,IAAI;MAC3B;KACD,CAAC;EACJ;EAEAW,UAAUA,CAAA;IACRI,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B;;AAzCWzB,cAAc,C;mBAAdA,cAAc,EAAA0B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA;AAAA;AAAd/B,cAAc,C;QAAdA,cAAc;EAAAgC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCV3BZ,EAAA,CAAAc,cAAA,YAAoE;MACoBd,EAAA,CAAAe,SAAA,WAAqC;MAAAf,EAAA,CAAAgB,YAAA,EAAI;MAC/HhB,EAAA,CAAAc,cAAA,YAA6B;MACuFd,EAAA,CAAAiB,MAAA,aAAM;MAAAjB,EAAA,CAAAe,SAAA,cAA2B;MAAAf,EAAA,CAAAgB,YAAA,EAAS;MAC5JhB,EAAA,CAAAc,cAAA,YAAmD;MAI3Cd,EAAA,CAAAe,SAAA,iBAAwG;MAC1Gf,EAAA,CAAAgB,YAAA,EAAM;MACNhB,EAAA,CAAAc,cAAA,eAAwB;MACtBd,EAAA,CAAAe,SAAA,iBAA8G;MAChHf,EAAA,CAAAgB,YAAA,EAAM;MACNhB,EAAA,CAAAc,cAAA,eAAwB;MACkCd,EAAA,CAAAiB,MAAA,aAAK;MAAAjB,EAAA,CAAAgB,YAAA,EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}